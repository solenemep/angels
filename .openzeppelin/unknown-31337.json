{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "46b8e07100f2d58c93751e533d1cf2d2a90b61ad314ae8e7c286bb7e8000d77b": {
      "address": "0xb6aA91E8904d691a10372706e57aE1b390D26353",
      "txHash": "0xea37ca15fa08d5cae60f69581a9356bce3516c90ed9f1270ba0858354b3fb632",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_latestAssetId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:13"
          },
          {
            "label": "assetInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(AssetInfo)11003_storage))",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:16"
          },
          {
            "label": "_allAssets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(UintSet)5736_storage)",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:17"
          },
          {
            "label": "_assetsPerWeight",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UintSet)5736_storage))",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:18"
          },
          {
            "label": "assetsUniqueWeights",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(AssetInfo)11003_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IAssetRegistry.AssetInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UintSet)5736_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct EnumerableSet.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetInfo)11003_storage)": {
            "label": "mapping(uint256 => struct IAssetRegistry.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)5736_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)11003_storage": {
            "label": "struct IAssetRegistry.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assetIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)5278_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5736_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eec0fc30d7a6fdf23731b0e02047fcaf0d0a058ac759b7e31071c836ab5cacdc": {
      "address": "0x6fFa22292b86D678fF6621eEdC9B15e68dC44DcD",
      "txHash": "0x5311d037731f4b1adebc63d6325ccf3f1379fdda8ddfe22cf0630ff92d629b89",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "soul",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(ISoul)11179",
            "contract": "Creature",
            "src": "contracts/Creature.sol:18"
          },
          {
            "label": "currentBacthIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:22"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(Counter)4739_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:23"
          },
          {
            "label": "priceInSouls",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISoul)11179": {
            "label": "contract ISoul",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "daddc530b2971670d0b00f5e123107a129b845fea544b09703191bec69603c0f": {
      "address": "0x11632F9766Ee9d9317F95562a6bD529652ead78f",
      "txHash": "0x0924aa7e76ac2c5e4862ac06c653f7ce6bb86c9485275d4047122efbd84c4974",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "soul",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(ISoul)11179",
            "contract": "Creature",
            "src": "contracts/Creature.sol:18"
          },
          {
            "label": "currentBacthIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:22"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(Counter)4739_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:23"
          },
          {
            "label": "priceInSouls",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISoul)11179": {
            "label": "contract ISoul",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "81cd3e9d74d304dca562fa84619f6f709168522eb3548c9b9fc4024116dd0ee5": {
      "address": "0xf93b0549cD50c849D792f0eAE94A598fA77C7718",
      "txHash": "0xc07ab4c59ac6d4de011ba873d31e0899c5bf85c0322ca304173be636d2c4d6ce",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "keter",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)2203",
            "contract": "Staking",
            "src": "contracts/Staking.sol:24"
          },
          {
            "label": "scion",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IScion)4513",
            "contract": "Staking",
            "src": "contracts/Staking.sol:25"
          },
          {
            "label": "rewardPerBlock",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:27"
          },
          {
            "label": "totalNFTStaked",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:28"
          },
          {
            "label": "lastBlockUpdate",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:29"
          },
          {
            "label": "rewardPerTokenStored",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:30"
          },
          {
            "label": "_stakes",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(Stake)3938_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2203": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IScion)4513": {
            "label": "contract IScion",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Stake)3938_storage)": {
            "label": "mapping(address => struct Staking.Stake)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)2973_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)3938_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "stakedTokenIds",
                "type": "t_struct(UintSet)3431_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userRewardPerTokenPaid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UintSet)3431_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2973_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1787f69b763ae9ea9305965c32df0e2977ea740715674ce9a1ab1cb01de35374": {
      "address": "0x4f1F87d512650f32bf9949C4c5Ef37a3cc891C6D",
      "txHash": "0xd093071b96ee62d76c13d05e47f7cbfbef4e2835937b0830ec7c9e3091a95e39",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)4739_storage",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:33"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:35"
          },
          {
            "label": "mintPassesHolderAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:36"
          },
          {
            "label": "scionAddress",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:37"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:39"
          },
          {
            "label": "_latestBidId",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:40"
          },
          {
            "label": "start",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:41"
          },
          {
            "label": "minimumBidAmount",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:42"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:43"
          },
          {
            "label": "classLimits",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_enum(Class)11077,t_struct(ClassLimits)11088_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:46"
          },
          {
            "label": "bidInfos",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(BidInfo)11102_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:49"
          },
          {
            "label": "_allBids",
            "offset": 0,
            "slot": "262",
            "type": "t_struct(UintSet)5736_storage",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:50"
          },
          {
            "label": "_ownedBids",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_struct(UintSet)5736_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:51"
          },
          {
            "label": "mintPassInfos",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_struct(MintPassInfo)11108_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Class)11077": {
            "label": "enum IMintPasses.Class",
            "members": [
              "NONE",
              "BRONZE",
              "SILVER",
              "GOLD",
              "PLATINUM",
              "RUBY",
              "ONYX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5736_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Class)11077,t_struct(ClassLimits)11088_storage)": {
            "label": "mapping(enum IMintPasses.Class => struct IMintPasses.ClassLimits)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BidInfo)11102_storage)": {
            "label": "mapping(uint256 => struct IMintPasses.BidInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintPassInfo)11108_storage)": {
            "label": "mapping(uint256 => struct IMintPasses.MintPassInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BidInfo)11102_storage": {
            "label": "struct IMintPasses.BidInfo",
            "members": [
              {
                "label": "bidIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "bidValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "class",
                "type": "t_enum(Class)11077",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ClassLimits)11088_storage": {
            "label": "struct IMintPasses.ClassLimits",
            "members": [
              {
                "label": "bottomBidValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topBidValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bottomAssetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "topAssetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintPassInfo)11108_storage": {
            "label": "struct IMintPasses.MintPassInfo",
            "members": [
              {
                "label": "class",
                "type": "t_enum(Class)11077",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "random",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5278_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5736_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ecc0188718d17494a3989040dc92289ee80626d07a655ca9a0c96d2f50550901": {
      "address": "0x499AA73A1D27e54B33E7DB05ffd22854EC70257E",
      "txHash": "0xf4aad8b0c21bda7d6f9763973b8548b43a13ec3a75195c22bb5b6558cdf9e67e",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:21"
          },
          {
            "label": "mintPasses",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IMintPasses)11143",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:22"
          },
          {
            "label": "_promotionBeneficiaries",
            "offset": 0,
            "slot": "153",
            "type": "t_struct(AddressSet)5579_storage",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:25"
          },
          {
            "label": "promotionPrices",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_enum(Class)11077,t_uint256)",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IMintPasses)11143": {
            "label": "contract IMintPasses",
            "numberOfBytes": "20"
          },
          "t_enum(Class)11077": {
            "label": "enum IMintPasses.Class",
            "members": [
              "NONE",
              "BRONZE",
              "SILVER",
              "GOLD",
              "PLATINUM",
              "RUBY",
              "ONYX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Class)11077,t_uint256)": {
            "label": "mapping(enum IMintPasses.Class => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5579_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5278_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0681fc8daf1ac0d356d130697fe13db4f27b0cf245bb107ecd4600493d260804": {
      "address": "0x4c04377f90Eb1E42D845AB21De874803B8773669",
      "txHash": "0x3a1dd0de1a755e69f66aefe2c7dcbf1d753997a80089ccf1bf1a0a93bf414c13",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "soul",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(ISoul)7437",
            "contract": "Scion",
            "src": "contracts/Scion.sol:24"
          },
          {
            "label": "keter",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)4302",
            "contract": "Scion",
            "src": "contracts/Scion.sol:25"
          },
          {
            "label": "mintPasses",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IMintPasses)7419",
            "contract": "Scion",
            "src": "contracts/Scion.sol:26"
          },
          {
            "label": "assetsRegistry",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IAssetRegistry)7340",
            "contract": "Scion",
            "src": "contracts/Scion.sol:27"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)4694_storage",
            "contract": "Scion",
            "src": "contracts/Scion.sol:29"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "Scion",
            "src": "contracts/Scion.sol:34"
          },
          {
            "label": "scionsData",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_struct(Scions)5536_storage)",
            "contract": "Scion",
            "src": "contracts/Scion.sol:55"
          },
          {
            "label": "_rerollChances",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(RerollChances)5543_storage",
            "contract": "Scion",
            "src": "contracts/Scion.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAssetRegistry)7340": {
            "label": "contract IAssetRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4302": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMintPasses)7419": {
            "label": "contract IMintPasses",
            "numberOfBytes": "20"
          },
          "t_contract(ISoul)7437": {
            "label": "contract ISoul",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Scions)5536_storage)": {
            "label": "mapping(uint256 => struct Scion.Scions)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)7279_storage": {
            "label": "struct IAssetRegistry.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assetIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4694_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RerollChances)5543_storage": {
            "label": "struct Scion.RerollChances",
            "members": [
              {
                "label": "downgrade",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sameWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rarityPlus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Scions)5536_storage": {
            "label": "struct Scion.Scions",
            "members": [
              {
                "label": "background",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "halo",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "head",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "body",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "wings",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "hands",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "sigil",
                "type": "t_struct(AssetInfo)7279_storage",
                "offset": 0,
                "slot": "24"
              }
            ],
            "numberOfBytes": "896"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
