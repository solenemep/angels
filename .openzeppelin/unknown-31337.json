{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "46b8e07100f2d58c93751e533d1cf2d2a90b61ad314ae8e7c286bb7e8000d77b": {
      "address": "0xdB05A386810c809aD5a77422eb189D36c7f24402",
      "txHash": "0x49e8ad8593e710dcb9c967e3dca9b77ccf3f1386bd099b0a434a18803c97b847",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_latestAssetId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:13"
          },
          {
            "label": "assetInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(AssetInfo)11293_storage))",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:16"
          },
          {
            "label": "_allAssets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(UintSet)5960_storage)",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:17"
          },
          {
            "label": "_assetsPerWeight",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UintSet)5960_storage))",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:18"
          },
          {
            "label": "assetsUniqueWeights",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "AssetsRegistry",
            "src": "contracts/AssetsRegistry.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(AssetInfo)11293_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct IAssetRegistry.AssetInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UintSet)5960_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct EnumerableSet.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetInfo)11293_storage)": {
            "label": "mapping(uint256 => struct IAssetRegistry.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)5960_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)11293_storage": {
            "label": "struct IAssetRegistry.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assetIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)5502_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5960_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5502_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b2fc2e696bc7c655287e9e54e278f02edacdcf05ad225449bc61cdad90da8c6a": {
      "address": "0xbf2ad38fd09F37f50f723E35dd84EEa1C282c5C9",
      "txHash": "0x72be085422ed340383937f6171aa1be0a6a257bc2c50ba53e61f0e1d8160ea66",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(Registry)8118",
            "contract": "Creature",
            "src": "contracts/Creature.sol:17"
          },
          {
            "label": "soul",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(Soul)10703",
            "contract": "Creature",
            "src": "contracts/Creature.sol:18"
          },
          {
            "label": "currentBacthIndex",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:22"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(Counter)4739_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:23"
          },
          {
            "label": "priceInSouls",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Registry)8118": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_contract(Soul)10703": {
            "label": "contract Soul",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d0499763b1b3a876d4eb28c59fda17880a50032940a88ac9d8b5d642f323c45": {
      "address": "0xF66CfDf074D2FFD6A4037be3A669Ed04380Aef2B",
      "txHash": "0x743a246d9cecb133296b5034ea6b7ff3be3eec8f5961c2f70a39aa89e5637e62",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(Registry)8118",
            "contract": "Creature",
            "src": "contracts/Creature.sol:17"
          },
          {
            "label": "soul",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(Soul)10703",
            "contract": "Creature",
            "src": "contracts/Creature.sol:18"
          },
          {
            "label": "currentBacthIndex",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:22"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(Counter)4739_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:23"
          },
          {
            "label": "priceInSouls",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Creature",
            "src": "contracts/Creature.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "Creature",
            "src": "contracts/Creature.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Registry)8118": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_contract(Soul)10703": {
            "label": "contract Soul",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e61970067e382e3d272ba28363df20402812aa3f9803fa817578a12323109bf4": {
      "address": "0xFC4EE541377F3b6641c23CBE82F6f04388290421",
      "txHash": "0xfa9b970c62b31f15097f0fb4af8151a132676765ec0b6a09e6a8486b2bee037c",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(Registry)7794",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:25"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)4739_storage",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:29"
          },
          {
            "label": "_latestBidId",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:30"
          },
          {
            "label": "start",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:31"
          },
          {
            "label": "minimumBidAmount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:32"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:33"
          },
          {
            "label": "classLimits",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_enum(Class)5921,t_struct(ClassLimits)5932_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:73"
          },
          {
            "label": "bidInfos",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(BidInfo)5946_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:76"
          },
          {
            "label": "_allBids",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)5736_storage",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:77"
          },
          {
            "label": "_ownedBids",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_struct(UintSet)5736_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:78"
          },
          {
            "label": "mintPassInfos",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_struct(MintPassInfo)5952_storage)",
            "contract": "MintPasses",
            "src": "contracts/MintPasses.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Registry)7794": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_enum(Class)5921": {
            "label": "enum MintPasses.Class",
            "members": [
              "NONE",
              "BRONZE",
              "SILVER",
              "GOLD",
              "PLATINUM",
              "RUBY",
              "ONYX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5736_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Class)5921,t_struct(ClassLimits)5932_storage)": {
            "label": "mapping(enum MintPasses.Class => struct MintPasses.ClassLimits)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BidInfo)5946_storage)": {
            "label": "mapping(uint256 => struct MintPasses.BidInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintPassInfo)5952_storage)": {
            "label": "mapping(uint256 => struct MintPasses.MintPassInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BidInfo)5946_storage": {
            "label": "struct MintPasses.BidInfo",
            "members": [
              {
                "label": "bidIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "bidValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "class",
                "type": "t_enum(Class)5921",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ClassLimits)5932_storage": {
            "label": "struct MintPasses.ClassLimits",
            "members": [
              {
                "label": "bottomBidValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topBidValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bottomAssetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "topAssetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintPassInfo)5952_storage": {
            "label": "struct MintPasses.MintPassInfo",
            "members": [
              {
                "label": "class",
                "type": "t_enum(Class)5921",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "random",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5278_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5736_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3092404c400bb990525eec39eaa98a0cdb0e0b7058a094ccecfd8babfe5d90a9": {
      "address": "0x20d7B364E8Ed1F4260b5B90C41c2deC3C1F6D367",
      "txHash": "0x73d42584dfd739294d4c1031d2c60e0cdca026f5f656386645d41fe346570b36",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(Registry)7794",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:20"
          },
          {
            "label": "mintPasses",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintPasses)7225",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:21"
          },
          {
            "label": "_promotionBeneficiaries",
            "offset": 0,
            "slot": "153",
            "type": "t_struct(AddressSet)5579_storage",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:24"
          },
          {
            "label": "promotionPrices",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_enum(Class)5921,t_uint256)",
            "contract": "MintPassesHolder",
            "src": "contracts/MintPassesHolder.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(MintPasses)7225": {
            "label": "contract MintPasses",
            "numberOfBytes": "20"
          },
          "t_contract(Registry)7794": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_enum(Class)5921": {
            "label": "enum MintPasses.Class",
            "members": [
              "NONE",
              "BRONZE",
              "SILVER",
              "GOLD",
              "PLATINUM",
              "RUBY",
              "ONYX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Class)5921,t_uint256)": {
            "label": "mapping(enum MintPasses.Class => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5579_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5278_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f6089f6539638d39db2474cb70e37a0109efacb9edfb2cdfad6a6ead8dd6105a": {
      "address": "0xf5C3953Ae4639806fcbCC3196f71dd81B0da4348",
      "txHash": "0xb76182d8511327dbd173d51f0a710ee0b07e9d9f0617da8c0654c5ad628e18bb",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(Registry)7794",
            "contract": "Scion",
            "src": "contracts/Scion.sol:24"
          },
          {
            "label": "soul",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(Soul)10353",
            "contract": "Scion",
            "src": "contracts/Scion.sol:25"
          },
          {
            "label": "keter",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(Keter)10290",
            "contract": "Scion",
            "src": "contracts/Scion.sol:26"
          },
          {
            "label": "mintPasses",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(MintPasses)7225",
            "contract": "Scion",
            "src": "contracts/Scion.sol:27"
          },
          {
            "label": "assetsRegistry",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IAssetRegistry)10216",
            "contract": "Scion",
            "src": "contracts/Scion.sol:28"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "256",
            "type": "t_struct(Counter)4739_storage",
            "contract": "Scion",
            "src": "contracts/Scion.sol:30"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Scion",
            "src": "contracts/Scion.sol:35"
          },
          {
            "label": "scionsData",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(Scions)7868_storage)",
            "contract": "Scion",
            "src": "contracts/Scion.sol:56"
          },
          {
            "label": "_rerollChances",
            "offset": 0,
            "slot": "259",
            "type": "t_struct(RerollChances)7875_storage",
            "contract": "Scion",
            "src": "contracts/Scion.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAssetRegistry)10216": {
            "label": "contract IAssetRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(Keter)10290": {
            "label": "contract Keter",
            "numberOfBytes": "20"
          },
          "t_contract(MintPasses)7225": {
            "label": "contract MintPasses",
            "numberOfBytes": "20"
          },
          "t_contract(Registry)7794": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_contract(Soul)10353": {
            "label": "contract Soul",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Scions)7868_storage)": {
            "label": "mapping(uint256 => struct Scion.Scions)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)10155_storage": {
            "label": "struct IAssetRegistry.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assetIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4739_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RerollChances)7875_storage": {
            "label": "struct Scion.RerollChances",
            "members": [
              {
                "label": "downgrade",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sameWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rarityPlus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Scions)7868_storage": {
            "label": "struct Scion.Scions",
            "members": [
              {
                "label": "background",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "halo",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "head",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "body",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "wings",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "hands",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "sigil",
                "type": "t_struct(AssetInfo)10155_storage",
                "offset": 0,
                "slot": "24"
              }
            ],
            "numberOfBytes": "896"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5b39ff366eee5fc1460b040b8430c398be425e20692aef3fca94fc02867da1f1": {
      "address": "0x90b97E83e22AFa2e6A96b3549A0E495D5Bae61aF",
      "txHash": "0xb3ad939182d925f78721684b378b5551fcfa3b479cef473b5f9d2d5e19f5fb7f",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(Registry)7794",
            "contract": "Staking",
            "src": "contracts/Staking.sol:23"
          },
          {
            "label": "keter",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(Keter)10290",
            "contract": "Staking",
            "src": "contracts/Staking.sol:24"
          },
          {
            "label": "scion",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(Scion)9524",
            "contract": "Staking",
            "src": "contracts/Staking.sol:25"
          },
          {
            "label": "rewardPerBlock",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:27"
          },
          {
            "label": "totalNFTStaked",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:28"
          },
          {
            "label": "lastBlockUpdate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:29"
          },
          {
            "label": "rewardPerTokenStored",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:30"
          },
          {
            "label": "_stakes",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_struct(Stake)9573_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Keter)10290": {
            "label": "contract Keter",
            "numberOfBytes": "20"
          },
          "t_contract(Registry)7794": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_contract(Scion)9524": {
            "label": "contract Scion",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Stake)9573_storage)": {
            "label": "mapping(address => struct Staking.Stake)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)5278_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)9573_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "stakedTokenIds",
                "type": "t_struct(UintSet)5736_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userRewardPerTokenPaid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UintSet)5736_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
